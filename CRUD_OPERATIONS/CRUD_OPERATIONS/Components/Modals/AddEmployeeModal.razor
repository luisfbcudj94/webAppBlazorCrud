@using CRUD_OPERATIONS.Components.Models
@using CRUD_OPERATIONS.Components.Pages

<div class="modal" style="display:@(ShowModal ? "block" : "none")">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                @if (IsUpdate == true)
                {
                    <h5 class="modal-title">Update Employee</h5>
                }
                else
                {
                    <h5 class="modal-title">Add Employee</h5>
                }

                <button type="button" class="close" @onclick="HideModal">
                    <i class="fa-solid fa-circle-xmark"></i>
                </button>
            </div>
            <div class="modal-body">
                <input type="text" @bind="newEmployee.Email" placeholder="Email" class="form-control" />
                <input type="text" @bind="newEmployee.Designation" placeholder="Designation" class="form-control" />
                <input type="text" @bind="newEmployee.ReportingManager" placeholder="Reporting Manager" class="form-control" />
                <input type="date" @bind="newEmployee.JoiningDate" placeholder="Joining Date" class="form-control" />
                <input type="date" @bind="newEmployee.DateOfBirth" placeholder="Date Of Birth" class="form-control" />
                <input type="text" @bind="newEmployee.DisplayName" placeholder="Display Name" class="form-control" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" @onclick="HideModal">Close</button>
                
                @if (IsUpdate == true)
                {
                    <button type="button" class="btn btn-primary" @onclick="UpdateEmployee">Update</button>
                }
                else
                {
                    <button type="button" class="btn btn-primary" @onclick="AddEmployee">Add</button>
                }

            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public bool ShowModal { get; set; }
    [Parameter] public bool IsUpdate { get; set; }
    [Parameter] public EventCallback<Employee> OnAddEmployee { get; set; }
    [Parameter] public EventCallback<Employee> OnUpdateEmployee { get; set; }
    private Employee newEmployee = new Employee();

    [Parameter] public Employee? EmployeeToUpdate { get; set; }


    protected override void OnParametersSet()
    {
        if (EmployeeToUpdate != null)
        {
            newEmployee = EmployeeToUpdate;
        }
        else
        {
            newEmployee = new Employee();
        }
    }

    private void HideModal()
    {
        ShowModal = false;
    }

    private async Task AddEmployee()
    {
        await OnAddEmployee.InvokeAsync(newEmployee);
    }

    private async Task UpdateEmployee()
    {
        await OnUpdateEmployee.InvokeAsync(newEmployee);
    }
}
